#%RAML 1.0
title: "0-Stor"
description: "0-Stor REST API"
version: 0.0.1
mediaType: application/json

securitySchemes:
  itsyouonline:
    description: |
      OAuth2 is a protocol that lets external apps request authorization to private
      details in a user's account without getting their password.
    type: OAuth 2.0
    describedBy:
      headers:
        Authorization:
          description: |
            Used to send a valid OAuth 2 access token. Do not use together with
            the "access_token" query string parameter.
      queryParameters:
        access_token:
          description: |
            Used to send a valid OAuth 2 access token. Do not use together with
            the "Authorization" header
      responses:
        404:
          description: Unauthorized
    settings:
      authorizationUri: https://itsyou.online/v1/oauth/authorize
      accessTokenUri: https://itsyou.online/v1/oauth/access_token?response_type=id_token
      authorizationGrants: [ authorization_code, client_credentials ]
      scopes:
        - "user:memberof:store.namespace"
        - "user:memberof:store.namespace.read"
        - "user:memberof:store.namespace.write"
        - "user:memberof:store.namespace.delete"

traits:
  paginated: !include https://raw.githubusercontent.com/Jumpscale-Cockpit/raml-definitions/master/traits/pagination.raml

types:

  NamespaceStat:
    properties:
      spaceUsed:
        description: |
          Total size in MiB used in the namespace
        type: number
        format: float
        required: false
      spaceAvailable:
        description: |
          Size in MiB of remaining in the namespace. It the result of (totalSize - spaceUsed)
        type: number
        format: float
        required: false
      readRequestPerHour:
        description: |
          Number of read request per hour
        type: integer
        format: int64
      writeRequestPerHour:
        description: |
          Number of write request per hour
        type: integer
        format: int64
      nrObjects:
        description: |
          Number of object contained in this namespace
        type: integer
        format: int64

  Namespace:
    properties:
      label:
        type: string
        required: true
        minLength: 5
        maxLength: 128
        pattern: ^\w+$
      stats:
        type: NamespaceStat
        description: |
          statistics of the namespace
        required: false
    examples:
      properties:
        label: MyLabel
        stats:
          spaceAvailable: 128
          spaceUsed: 10
          nrObjects: 400
          readRequestPerHour: 250
          writeRequestPerHour: 120

  StoreStat:
      properties:
        size:
          description: |
            Total available size (MBs) of the Store. Total reservations size can't exceed that value
          required: true
          type: integer
          format: int64
          minimum: 0
      examples:
        properties:
          size: 128

  ReferenceID:
    type: string
    minLength: 1
    maxLength: 16
    pattern: ^\w+$

  Object:
    properties:
      id:
        required: true
        type: string
        minLength: 1
        maxLength: 128
        pattern: ^\w+$
      data:
        required: true
        type: file
        fileTypes: ['*/*'] # any file type allowed
        # maxLength: 1048576 TODO: define max upload size
      referenceList:
        type: ReferenceID[]
        description: List of reference id using this object

  CheckStatus:
    properties:
      id:
        required: true
        type: string
        minLength: 1
        maxLength: 128
        pattern: ^\w+$
      status:
        enum: [ok, corrupted, missing]

  Error:
    properties:
      error:
        type: string
        required: true

securedBy: [ itsyouonline : { scopes: ["user:memberof:store.namespace"] } ]
/stats:
     get:
      displayName: GetStoreStats
      description: |
        Return usage statistics about the whole store
      responses:
        200:
          body:
            type: StoreStat

/namespaces:
  /{nsid}:
    securedBy: [ itsyouonline : { scopes: ["user:memberof:store.namespace"] }]
    get:
      displayName: GetNameSpace
      description: Get detail view about namespace
      responses:
        200:
          body:
            type: Namespace
        404:
          description: Namespace not found
    /objects:
      get:
        securedBy: [ itsyouonline : { scopes: ["user:memberof:store.namespace.read"] }]
        is: [paginated]
        displayName: ListObjects
        description: |
          List keys of the object in the namespace
        responses:
          200:
            body:
              type: string[]
      post:
        securedBy: [ itsyouonline : { scopes: ["user:memberof:store.namespace.write"] }]
        displayName: CreateObject
        description: |
          Set an object into the namespace
        body:
          type: Object
        responses:
          201:
            description: object created
            body:
              type: Object
      /{id}:
        head:
          securedBy: [ itsyouonline : { scopes: ["user:memberof:store.namespace.read"] }]
          displayName: ExistObject
          description: |
            Test if an object with this id exists
          responses:
            200:
              description: Object exists
            404:
              description: |
                No object found with this id
        get:
          securedBy: [ itsyouonline : { scopes: ["user:memberof:store.namespace.read"] }]
          displayName: GetObject
          description: |
            Retrieve object from the store
          responses:
            200:
              body:
                type: Object
            404:
              description: |
                Object not found
        delete:
          securedBy: [ itsyouonline : { scopes: ["user:memberof:store.namespace.delete"] }]
          displayName: DeleteObject
          description: |
            Delete object from the store
          responses:
            204:
              description: |
                Object deleted succesfully
            404:
              description: |
                Object not found
        /references:
          put:
            displayName: UpdateReferenceList
            securedBy: [ itsyouonline : { scopes: ["user:memberof:store.namespace.write"] }]
            description: |
              Update reference list.
              The reference list of the object will be update with the references from the request body
            body:
              properties:
                references:
                  type: ReferenceID[]
    /check:
       get:
        securedBy: [ itsyouonline : { scopes: ["user:memberof:store.namespace.read"] }]
        displayName: CheckObjects
        description: |
          Check the status of some objects
          This command let you investigate the status of your data. It will validate that the data on disk has not been corrupted
        body:
          properties:
            ids:
              type: string[]
              description: |
                List of object ids you want to check.
        responses:
          200:
            body:
              type: CheckStatus[]